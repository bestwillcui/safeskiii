{"remainingRequest":"/Users/Will/Desktop/final-project-dream-team/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Will/Desktop/final-project-dream-team/src/components/MainContent/BroadcastW.vue?vue&type=style&index=0&id=5e5a0475&scoped=true&lang=css&","dependencies":[{"path":"/Users/Will/Desktop/final-project-dream-team/src/components/MainContent/BroadcastW.vue","mtime":1607530416967},{"path":"/Users/Will/Desktop/final-project-dream-team/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Will/Desktop/final-project-dream-team/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Will/Desktop/final-project-dream-team/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Will/Desktop/final-project-dream-team/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Will/Desktop/final-project-dream-team/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhlbGxvIHsKICBmb250LWZhbWlseTogIlJlZCBIYXQgVGV4dCI7CiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGOUM5QzsKICBtYXJnaW4tdG9wOiAxMHB4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgYm9yZGVyLXN0eWxlOiBzb2xpZDsKICBib3JkZXItd2lkdGg6IDJweDsKICBib3JkZXItcmFkaXVzOiAxNXB4OwogIHBhZGRpbmc6IDMwcHg7CiAgYm94LXNoYWRvdzogMnB4IDJweDsKfQoKLmhlbGxvOmhvdmVyewogICAgYm94LXNoYWRvdzogMCA1cHggNXB4OwogICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAwMSk7Cn0KCi50aXRsZSB7CiAgZm9udC1zaXplOiAyNHB4Owp9CgojYnJvYWRjYXN0IHsKICB3aWR0aDogMTAwJTsKICBwYWRkaW5nOiAxMnB4IDIwcHg7CiAgbWFyZ2luOiA4cHggMDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICBmb250LWZhbWlseTogIlJlZCBIYXQgVGV4dCI7Cn0KCg=="},{"version":3,"sources":["BroadcastW.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BroadcastW.vue","sourceRoot":"src/components/MainContent","sourcesContent":["<template>\n  <div class=\"hello\">\n    <div class=\"title\" v-if='announcements.length'>\n          <p id=\"cmts\" class=\"announcements\" v-for=\"a in announcements\" :key=\"a.message\">\n            {{ a.message }}\n          </p> \n        </div>\n    <div v-else class=\"title\">No broadcasts yet! </div>\n\n    <!-- <button type = \"button\" v-on:click=\"getAnnouncement()\"> See Announcement </button> -->\n\n    <input type=\"text\" id=\"broadcast\" name=\"broadcast\" v-model='broadcastContent' v-if='business'>\n    <button type=\"button\" v-on:click=\"postBroadcast()\" v-if='business'>Post!</button>\n\n  </div>\n</template>\n\n<script>\n\nimport axios from \"axios\"\nimport Firebase from 'firebase'\n\nexport default {\n  name: 'Login',\n  props: {\n    msg: String,\n    busi: String\n  },\n  data(){\n    return{\n      business : false,\n      announcements : [],\n      broadcastContent: \"\",\n      db: []\n    }\n  },\n  watch: { \n    busi: function(newVal, oldVal) { // watch it\n      console.log('Prop changed: ', newVal, ' | was: ', oldVal)\n      this.db = Firebase.firestore()\n      let authenticated = this.$cookie.get('safeskiii-auth');\n      if(!authenticated) {\n        console.log('not signed in :(');\n      }\n      this.$bind('users', this.db.collection('users')).then(users => {\n      this.users === users\n      });\n\n      this.$bind('announcements', this.db.collection('businesses').doc(this.busi).collection('broadcast')).then(announcements => {\n      console.log(this.busi);\n      // this.$bind('announcements', this.db.collection('businesses').doc('alta ski resort').collection('broadcast')).then(announcements => {\n      this.announcements === announcements\n      });\n    }\n  },\n\n  created: function() {\n    this.db = Firebase.firestore()\n    let authenticated = this.$cookie.get('safeskiii-auth');\n    if(!authenticated) {\n      console.log('not signed in :(');\n    }\n    this.$bind('users', this.db.collection('users')).then(users => {\n    this.users === users\n    });\n\n    this.$bind('announcements', this.db.collection('businesses').doc(this.busi).collection('broadcast')).then(announcements => {\n    console.log(this.busi);\n    // this.$bind('announcements', this.db.collection('businesses').doc('alta ski resort').collection('broadcast')).then(announcements => {\n    this.announcements === announcements\n    });\n  },\n\n  mounted(){\n    //Is it a business logged in now?\n    axios.get(\"api/users\")\n    .then( (response) => {\n      //console.log(response.data.isBusiness)\n      this.business = response.data.isBusiness;\n    })\n    .catch()\n  },\n  computed:{\n  },\n\n  methods: {\n    postBroadcast(){\n      const bodyContent = {message: this.broadcastContent };  // TODO: Make location a prop\n      axios.post(\"/api/users/broadcast/\", bodyContent)\n        .then((res) => {\n          // const fullResponse = res.response === undefined ? res : res.response;\n          console.log(res);\n          console.log('hi broad update');\n\n          this.db.collection('businesses').doc(this.busi).collection('broadcast').doc('main').set({\n            message: this.broadcastContent\n          })\n          .then(function() {\n              console.log(\"Document successfully written!\");\n          })\n          .catch(function(error) {\n              console.error(\"Error writing document: \", error);\n          });\n\n          this.broadcastContent = \"\";\n          console.log('done?');\n        })\n        .catch((err) => {\n          this.errors.push(this.showResponse(err));\n          this.clearMessages();\n        });\n    },\n\n    getAnnouncement(){\n      let username = \"b\";\n      // let body = {username: \"b\"}\n      //console.log(bodyContent);\n      // console.log(body.username);\n      axios.get(`/api/users/announcements/${username}`)\n      .then((response) => {\n        this.announcements = response[0];\n      })\n      .catch();\n    }\n\n    // isBusiness(){\n    //   let business = false;\n    //   axios.get(\"api/users/\")\n    //   .then( (response) => {\n    //     business = response.data.isBusiness;\n    //     console.log(business);\n    //   })\n    //   .catch();\n    //   return business;\n    // }\n  }\n\n}\n</script>\n\n<style scoped>\n.hello {\n  font-family: \"Red Hat Text\";\n  background-color: #FF9C9C;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  border-style: solid;\n  border-width: 2px;\n  border-radius: 15px;\n  padding: 30px;\n  box-shadow: 2px 2px;\n}\n\n.hello:hover{\n    box-shadow: 0 5px 5px;\n    transform: scale(1.001);\n}\n\n.title {\n  font-size: 24px;\n}\n\n#broadcast {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  font-family: \"Red Hat Text\";\n}\n\n</style>"]}]}