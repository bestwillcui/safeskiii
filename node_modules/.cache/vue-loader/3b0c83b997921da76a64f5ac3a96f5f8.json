{"remainingRequest":"/Users/Will/Desktop/safeskiii/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Will/Desktop/safeskiii/src/components/MainContent/CheckinW.vue?vue&type=style&index=0&id=6937fe49&scoped=true&lang=css&","dependencies":[{"path":"/Users/Will/Desktop/safeskiii/src/components/MainContent/CheckinW.vue","mtime":1611018782895},{"path":"/Users/Will/Desktop/safeskiii/node_modules/css-loader/dist/cjs.js","mtime":1611018772467},{"path":"/Users/Will/Desktop/safeskiii/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1611018781759},{"path":"/Users/Will/Desktop/safeskiii/node_modules/postcss-loader/src/index.js","mtime":1611018777317},{"path":"/Users/Will/Desktop/safeskiii/node_modules/cache-loader/dist/cjs.js","mtime":1611018771353},{"path":"/Users/Will/Desktop/safeskiii/node_modules/vue-loader/lib/index.js","mtime":1611018781758}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3RpdGxlIHsKICBmb250LXNpemU6IDMwcHg7Cn0KCiN0aW1lcyB7CiAgcGFkZGluZzogNnB4IDEwcHg7CiAgbWFyZ2luOiAxcmVtIDAuNXJlbTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsKICBib3JkZXItcmFkaXVzOiAxMHB4OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgZm9udC1mYW1pbHk6ICJSZWQgSGF0IFRleHQiOwogIGZvbnQtc2l6ZTogMTZweDsKfQoKLmhlbGxvIHsKICAgIG1hcmdpbi1sZWZ0OiA1cHg7CiAgICBib3JkZXItc3R5bGU6IHNvbGlkOwogICAgYm9yZGVyLXdpZHRoOiAycHg7CiAgICBib3JkZXItcmFkaXVzOiAxNXB4OwogICAgcGFkZGluZzogMzBweDsKICAgIGJveC1zaGFkb3c6IDJweCAycHg7CgogICAgaGVpZ2h0OiA4NSU7CgogICAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgouaGVsbG86aG92ZXJ7CiAgICBib3gtc2hhZG93OiAwIDVweCA1cHg7CiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDAxKTsKfQoKLmNoZWNraW4gewogIHBhZGRpbmc6IDdweCAyMHB4OwogIG1hcmdpbjogMCAwLjVyZW07CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMTAwLCAxNDgsIDAuNSk7OwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIGZvbnQtZmFtaWx5OiAiUmVkIEhhdCBUZXh0IjsKICBmb250LXNpemU6IDE2cHg7Cn0KCi5jaGVja2luOmhvdmVyIHsKICBvcGFjaXR5OiAwLjg7Cn0KCmgzIHsKICBtYXJnaW46IDQwcHggMCAwOwp9Cgp1bCB7CiAgLyogbGlzdC1zdHlsZS10eXBlOiBub25lOwogIHBhZGRpbmc6IDA7ICovCn0KCmxpIHsKICAvKiBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luOiAwIDEwcHg7ICovCn0KCmEgewogIGNvbG9yOiAjNDJiOTgzOwp9CgpwIHsKICBwYWRkaW5nOiAwOwogIG1hcmdpbjogMDsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrCn0K"},{"version":3,"sources":["CheckinW.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"CheckinW.vue","sourceRoot":"src/components/MainContent","sourcesContent":["<template>\n  <div class=\"hello\">\n    <div id=\"title\">Reserve</div>\n\n    <!-- <div class=\"icon\"> <img alt=\"Home\" src=\"../../assets/worldwide.png\" width=20 height=20> </div> -->\n\n    <!-- <ul class=\"bargraph\"> -->\n      <!-- <div> <p v-for=\"time in checkin\" :key=\"time.count\">\n        <span style=\"font-weight: 800;\">{{ time.ctime }}:</span> {{ time.count }}\n      </p> </div> -->\n    <!-- </ul> -->\n\n    <div id=\"chart\"></div>\n\n    <!-- <input type=\"text\" id=\"fname\" name=\"fname\"><br> --> <!-- check-in comment? -->\n\n    <select name=\"times\" id=\"times\" v-model=\"curTime\">\n      <option value=\"09:00\">9am</option>\n      <option value=\"09:30\">9:30am</option>\n      <option value=\"10:00\">10am</option>\n      <option value=\"10:30\">10:30am</option>\n      <option value=\"11:00\">11am</option>\n      <option value=\"11:30\">11:30am</option>\n      <option value=\"12:00\">12pm</option>\n      <option value=\"12:30\">12:30pm</option>\n      <option value=\"13:00\">1pm</option>\n      <option value=\"13:30\">1:30pm</option>\n      <option value=\"14:00\">2pm</option>\n      <option value=\"14:30\">2:30pm</option>\n      <option value=\"15:00\">3pm</option>\n      <option value=\"15:30\">3:30pm</option>\n      <option value=\"16:00\">4pm</option>\n      <option value=\"16:30\">4:30pm</option>\n    </select>\n\n    <button class=\"checkin\" type=\"button\" v-on:click=\"checkIn()\">Reserve!</button>\n  </div>\n  \n</template>\n\n<script>\nimport axios from \"axios\";\nimport ApexCharts from 'apexcharts';\nimport Firebase from 'firebase';\n\nexport default {\n  name: 'CheckinW',\n  props: {\n    msg: String,\n    busi: String\n  },\n  watch: {\n    busi() {\n      this.location = this.busi.replace(/\\s/g, '');\n      this.db = Firebase.firestore()\n      let authenticated = this.$cookie.get('safeskiii-auth');\n      if(!authenticated) {\n        console.log('not signed in :(');\n      }\n      this.$bind('users', this.db.collection('users')).then(users => {\n      this.users === users\n      });\n\n      this.$bind('checkins', this.db.collection('businesses').doc(this.busi).collection('checkins')).then(checkins => {\n        this.checkin === checkins\n      });\n    }\n  },\n  data() {\n    return {\n      checkin: [],\n      curTime: \"09:00\",\n      location: \"SkiLines\",\n      options: [],\n      chart: [],\n      users: [],\n      db: []\n    }\n  },\n  created: function() {\n    this.location = this.busi.replace(/\\s/g, '');\n    this.db = Firebase.firestore()\n    let authenticated = this.$cookie.get('safeskiii-auth');\n    if(!authenticated) {\n      console.log('not signed in :(');\n    }\n    this.$bind('users', this.db.collection('users')).then(users => {\n    this.users === users\n    });\n\n    this.$bind('checkins', this.db.collection('businesses').doc(this.busi).collection('checkins')).then(checkins => {\n      this.checkin === checkins\n    });\n  },\n  mounted() {\n    this.location = this.busi.replace(/\\s/g, '');\n\n    let timeslots = ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', \n    '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30'];\n\n    let readTimes = ['9am', '9:30am', '10am', '10:30am', '11am', '11:30am', '12pm', \n    '12:30pm', '1pm', '1:30pm', '2pm', '2:30pm', '3pm', '3:30pm', '4pm', '4:30pm'];\n\n    //bar chart for check-ins\n\n    this.options = {\n      series: [{\n        data: []\n      }],\n      chart: {\n        type: 'bar',\n        height: 'auto'\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      xaxis: {\n        categories: readTimes,\n        tickAmount: 5,\n        max: 5\n      }\n    };\n\n    \n    timeslots.forEach((time) => {\n      //console.log(time);\n      axios.get(`/api/checkins/${this.location}/${time}`)\n        .then((res) => {\n            const fullResponse = res.response === undefined ? res : res.response;\n            let people = fullResponse.data.count;\n            // this.checkin.push({\n            //   ctime: time, \n            //   count: people\n            // });\n            this.options.series[0].data.push(people);\n        })\n        .catch((err) => {\n            this.errors.push(err);\n        });\n    })\n\n    console.log(this.options.series[0].data);\n\n    this.chart = new ApexCharts(document.querySelector(\"#chart\"), this.options);\n    this.chart.render();\n  },\n  \n  methods: {\n      checkIn() {\n        this.location = this.busi.replace(/\\s/g, '');\n        // alert('checkin');\n        // this.bubble3 = !this.bubble3;\n        //console.log(this.checkin)\n        let bodyContent = {location: this.location, timeslot:this.curTime};\n        // console.log(this.CheckinW)\n        console.log(bodyContent);\n        axios.post('/api/checkins/', bodyContent)\n        .then(() => {\n          //console.log(response)\n          alert(\"Successfully reserved for \" + this.curTime);\n\n          this.db.collection('businesses').doc(this.busi).collection('checkins').add({\n              username: this.$cookie.get('safeskiii-auth'),\n              checkin: this.curTime\n          })\n          .then(function(docRef) {\n              console.log(\"Document written with ID: \", docRef.id);\n          })\n          .catch(function(error) {\n              console.error(\"Error adding document: \", error);\n          });\n\n          this.db.collection('users').doc( this.$cookie.get('safeskiii-auth') ).collection('actions').add({\n              type: 'reserv',\n              data: this.curTime + ' at ' + this.location\n          })\n          .then(function(docRef) {\n              console.log(\"Document written with ID: \", docRef.id);\n          })\n          .catch(function(error) {\n              console.error(\"Error adding document: \", error);\n          });\n\n        })\n        .catch((err) =>{\n          let authenticated = this.$cookie.get('safeskiii-auth');\n          console.log(authenticated);\n          if (!authenticated || authenticated === undefined || authenticated.length == 0){\n            alert(\"Please login to reserve a time\");\n          } else {\n            console.log(err);\n            alert(\"Failed to reserve! Slot is most likely full.\");\n          }\n        })\n        this.checkin = [];\n        // this.options.series[0].data = [];\n        let new_data = [];\n        let timeslots = ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30',\n                        '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30'];\n\n        timeslots.forEach((time) => {\n          //console.log(time);\n          axios.get(`/api/checkins/${this.location}/${time}`)\n            .then((res) => {\n                const fullResponse = res.response === undefined ? res : res.response;\n                let people = fullResponse.data.count;\n                // this.checkin.push({\n                //   ctime: time, \n                //   count: people\n                // });\n                new_data.push(people);\n            })\n            .catch((err) => {\n                this.errors.push(err);\n            });\n        })\n\n        this.chart.updateSeries([{data: new_data}]);\n        // this.chart.render();\n      },\n      \n      getCount(thistimeslot) {\n        this.location = this.busi.replace(/\\s/g, '');\n        // let bodyContent = {timeslot: thistimeslot}\n        // axios.get('/api/checkins/', bodyContent)\n        let count = 0;\n        axios.get(`/api/checkins/${this.location}/${thistimeslot}`)\n        .then((res) => {\n          // count = res.body.count;\n          const fullResponse = res.response === undefined ? res : res.response;\n          count = fullResponse.data.count;\n          //this.checkin = []\n\n          console.log(count);\n        }).catch(() => {\n          console.log(\"Error getting count for \" + thistimeslot);\n        });\n      }\n\n  }\n}\n</script>\n\n<style scoped>\n#title {\n  font-size: 30px;\n}\n\n#times {\n  padding: 6px 10px;\n  margin: 1rem 0.5rem;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  box-sizing: border-box;\n  font-family: \"Red Hat Text\";\n  font-size: 16px;\n}\n\n.hello {\n    margin-left: 5px;\n    border-style: solid;\n    border-width: 2px;\n    border-radius: 15px;\n    padding: 30px;\n    box-shadow: 2px 2px;\n\n    height: 85%;\n\n    position: relative;\n}\n\n.hello:hover{\n    box-shadow: 0 5px 5px;\n    transform: scale(1.001);\n}\n\n.checkin {\n  padding: 7px 20px;\n  margin: 0 0.5rem;\n  display: inline-block;\n  background-color: rgba(0, 100, 148, 0.5);;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  box-sizing: border-box;\n  font-family: \"Red Hat Text\";\n  font-size: 16px;\n}\n\n.checkin:hover {\n  opacity: 0.8;\n}\n\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  /* list-style-type: none;\n  padding: 0; */\n}\n\nli {\n  /* display: inline-block;\n  margin: 0 10px; */\n}\n\na {\n  color: #42b983;\n}\n\np {\n  padding: 0;\n  margin: 0;\n  text-align: left;\n  border: 1px solid black\n}\n</style>"]}]}